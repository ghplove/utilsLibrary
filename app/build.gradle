apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "net.sourceforge.simcpux.myutilsproject"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    testCompile 'junit:junit:4.12'
    /**
     *
     Anko has a meta-dependency which plugs in all available features (including Commons, Layouts, SQLite) into your project at once:

     compile "org.jetbrains.anko:anko:$anko_version"

     */

    /**
     *
     If you only need some of the features, you can reference any of Anko's parts:

     // Anko Commons
     compile "org.jetbrains.anko:anko-commons:$anko_version"

     // Anko Layouts
     compile "org.jetbrains.anko:anko-sdk25:$anko_version" // sdk15, sdk19, sdk21, sdk23 are also available
     compile "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

     // Coroutine listeners for Anko Layouts
     compile "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
     compile "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"

     // Anko SQLite
     compile "org.jetbrains.anko:anko-sqlite:$anko_version"

     */

    compile "org.jetbrains.anko:anko-sdk25:$anko_version"
    compile "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    compile "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

    /**
     *
     There are also a number of artifacts for the Android support libraries:

     // Appcompat-v7 (only Anko Commons)
     compile "org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version"

     // Appcompat-v7 (Anko Layouts)
     compile "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
     compile "org.jetbrains.anko:anko-coroutines:$anko_version"

     // CardView-v7
     compile "org.jetbrains.anko:anko-cardview-v7:$anko_version"

     // Design
     compile "org.jetbrains.anko:anko-design:$anko_version"
     compile "org.jetbrains.anko:anko-design-coroutines:$anko_version"

     // GridLayout-v7
     compile "org.jetbrains.anko:anko-gridlayout-v7:$anko_version"

     // Percent
     compile "org.jetbrains.anko:anko-percent:$anko_version"

     // RecyclerView-v7
     compile "org.jetbrains.anko:anko-recyclerview-v7:$anko_version"
     compile "org.jetbrains.anko:anko-recyclerview-v7-coroutines:$anko_version"

     // Support-v4 (only Anko Commons)
     compile "org.jetbrains.anko:anko-support-v4-commons:$anko_version"

     // Support-v4 (Anko Layouts)
     compile "org.jetbrains.anko:anko-support-v4:$anko_version"

     */

    compile "org.jetbrains.anko:anko-design:$anko_version"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

repositories {
    mavenCentral()
}
